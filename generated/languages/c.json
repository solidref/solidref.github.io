{"name":"C","code":"c","ext":"c","birth":1972,"death":"N/A","inspiredBy":["b","algol","assembly","fortran","pascal"],"inspiring":["c++","java","javascript","c#","python","ruby","perl","php","objective-c"],"description":"C is a general-purpose, procedural computer programming language supporting structured programming,\nlexical variable scope, and recursion, while a static type system prevents unintended operations.\nDeveloped by Dennis Ritchie at Bell Labs, C was originally designed for writing system software\nlike operating systems, compilers, and editors. It has since become one of the most widely used\nprogramming languages. C is an efficient and powerful language, known for its performance and\ncontrol over system resources. Despite its age, C remains popular for both system-level and\napplication programming, forming the basis for more modern languages like C++, C#, and Objective-C.\nIt's also commonly used in embedded systems, operating systems like Linux and Windows, and complex\napplications requiring high performance. The languageâ€™s influence is evident in numerous other\nprogramming languages and it remains a fundamental part of software development history.\n","patterns":{"patterns_behavioural":[{"title":"Chain Of Responsibility","examples":[]},{"title":"Command","examples":[]},{"title":"Iterator","examples":[]},{"title":"Mediator","examples":[]},{"title":"Memento","examples":[]},{"title":"Observer","examples":[]},{"title":"State","examples":[]},{"title":"Strategy","examples":[]},{"title":"Template Method","examples":[]},{"title":"Visitor","examples":[]}],"patterns_creational":[{"title":"Factory Method","examples":[]},{"title":"Abstract Factory","examples":[]},{"title":"Builder","examples":[]},{"title":"Prototype","examples":[]},{"title":"Singleton","examples":[]}],"patterns_structural":[{"title":"Adapter","examples":[]},{"title":"Bridge","examples":[]},{"title":"Composite","examples":[]},{"title":"Decorator","examples":[]},{"title":"Facade","examples":[]},{"title":"Flyweight","examples":[]},{"title":"Proxy","examples":[]}]},"principles":{"principles_solid":[{"title":"Single Responsibility Principle (SRP)","examples":[]},{"title":"Open/Closed Principle (OCP)","examples":[]},{"title":"Liskov Substitution Principle (LSP)","examples":[]},{"title":"Interface Segregation Principle (ISP)","examples":[]},{"title":"Dependency Inversion Principle (DIP)","examples":[]}],"principles_other":[{"title":"Don't Repeat Yourself (DRY)","examples":[]},{"title":"Keep It Simple Stupid (KISS)","examples":[]},{"title":"You Aren't Gonna Need It (YAGNI)","examples":[]},{"title":"Law of Demeter (Principle of Least Knowledge)","examples":[]},{"title":"Separation of Concerns","examples":[]}]}}